query_id,query_text,sql_query,query_result,answer,response_time_seconds,error_messages
1,How many patients incidents are there?, SELECT COUNT(*) AS patient_incident_count FROM patient_incidents;,"[(100,)]","There are 100 patient incidents according to the SQL result from the `patient_incidents` table. The count is derived from the `COUNT(*)` function applied to all rows in this table, with the result labeled as `patient_incident_count`.",10.64,None
2,How many inpatient cases had no treatment plan?, SELECT COUNT(*) AS no_treatment_plan_cases FROM Inpatient_Cases WHERE treatment_plan IS NULL OR treatment_plan = 'None';,"[(394,)]","There were 394 inpatient cases that had no treatment plan. This information is derived from the `Inpatient_Cases` table, specifically using the `treatment_plan` column to identify cases where the value is either null or explicitly 'None'. The result is provided by counting these records and is returned as `no_treatment_plan_cases`.",10.74,None
3,What is the average billing amount from each hospital's outpatient cases?," SELECT      hospital_id,     AVG(bill_amount) AS average_bill_amount FROM      Outpatient_Cases GROUP BY      hospital_id;","[('CGH ', 234.41785000000016), ('KKH ', 291.971925), ('SGH ', 307.05915000000016), ('SHP ', 125.64142499999998), ('SKH ', 241.24664999999993)]","The average billing amount from each hospital's outpatient cases is as follows:

- CGH: $234.42
- KKH: $291.97
- SGH: $307.06
- SHP: $125.64
- SKH: $241.25

These averages are derived from the `Outpatient_Cases` table, using the `hospital_id` and `bill_amount` columns to calculate the average billing amount per hospital.",11.25,None
4,What is the percentage of successful surgeries rount off to second decimal?," SELECT      CAST(SUM(CASE WHEN outcomes = 'Successful' THEN 1 ELSE 0 END) AS DECIMAL(5,2)) / COUNT(*) * 100 AS success_rate_percentage FROM      surgery_metrics;","[(0,)]","The question cannot be answered due to insufficient data. The SQL result shows a single row with a value of 0 for `success_rate_percentage`, but this might be an anomaly or error since no actual percentage is provided. The table used in the query is `surgery_metrics`, and the relevant columns are `outcomes`.",12.11,None
5,What is the average consultation time in minutes for each hospital's patient?," SELECT      oc.hospital_id,     AVG(julianday(consultation_end_time) - julianday(consultation_start_time)) * 24 * 60 AS average_consultation_time_in_minutes FROM      Outpatient_Cases oc JOIN      patient_wait_times pwt ON oc.patient_id = pwt.patient_id GROUP BY      oc.hospital_id;","[('CGH ', 25.011638289503754), ('KKH ', 25.385951163992285), ('SGH ', 24.628806078806523), ('SHP ', 25.005431661196052), ('SKH ', 24.253757811337707)]","The average consultation time in minutes for each hospital's patient from the Outpatient_Cases table is as follows:
- CGH: 25.01 minutes
- KKH: 25.39 minutes
- SGH: 24.63 minutes
- SHP: 25.01 minutes
- SKH: 24.25 minutes

This information is derived from the Outpatient_Cases table, specifically using columns `hospital_id`, `consultation_start_time`, and `consultation_end_time`. The calculation involves determining the difference between the consultation end time and start time in Julian days, converting it to minutes, and then averaging these values for each hospital.",11.93,None
6,How many inpatient cases that required surgery also had followups?, SELECT COUNT(*) AS number_of_cases FROM Inpatient_Cases ic JOIN surgery_metrics sm ON ic.patient_id = sm.patient_id LEFT JOIN Inpatient_Cases followup_ic ON ic.patient_id = followup_ic.patient_id AND followup_ic.follow_up_date IS NOT NULL;,"[(500,)]",The number of inpatient cases that required surgery and also had follow-ups is 500. This information is derived from the `Inpatient_Cases` table (joined as `ic`) and `surgery_metrics` table (joined as `sm`). The count is further filtered by joining with another instance of the `Inpatient_Cases` table (aliased as `followup_ic`) to check for follow-up dates that are not null.,11.29,None
7,What percentage of incidents involving patients over the age of 60 required surgeries?,  SELECT      COUNT(CASE WHEN age > 60 THEN 1 END) * 100.0 / COUNT(*) AS percentage FROM      Inpatient_Cases ic JOIN      patient_incidents pi ON ic.patient_id = pi.patient_id LEFT JOIN      surgery_metrics sm ON ic.patient_id = sm.patient_id WHERE      pi.incident_type LIKE '%surgery%';,"[(None,)]","The question cannot be answered based on the provided SQL result. The query attempted to calculate the percentage of incidents involving patients over the age of 60 that required surgeries from the `Inpatient_Cases`, `patient_incidents`, and `surgery_metrics` tables, but the result set is empty (indicated by [(None,)]), suggesting there are no matching records in the database for the specified conditions.",13.2,None
8,Which departments have the longest average surgery durations and also the highest average length of stay? Are these concentrated in specific hospitals?,Error,Error,Error processing query,28.94,"Recursion limit of 10 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT
Traceback (most recent call last):
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\langgraph-aftershock-edrive-v2\evaluation\sql_evaluation\sql_agent_evaluator.py"", line 103, in run_evaluation
    result = sql_graph.invoke(formatted_input, config=config)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\5153-aftershock-v2\Lib\site-packages\langgraph\pregel\__init__.py"", line 2714, in invoke
    for chunk in self.stream(
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\5153-aftershock-v2\Lib\site-packages\langgraph\pregel\__init__.py"", line 2373, in stream
    raise GraphRecursionError(msg)
langgraph.errors.GraphRecursionError: Recursion limit of 10 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT
"
9,What is the average wait time from registration to consultation across hospitals  and how does it vary by department for outpatient cases?," SELECT      AVG(julianday(consultation_start_time) - julianday(registration_time)) AS avg_wait_time,     department FROM      patient_wait_times pwt JOIN      Outpatient_Cases oc ON pwt.patient_id = oc.patient_id GROUP BY      department;","[(0.033720619654139646, 'Cardiology'), (0.031841216225026024, 'Child Health'), (0.03505608976746981, 'Chronic Disease Management'), (0.03415032678886371, 'Dental'), (0.033238888923078774, 'Dermatology'), (0.034401260500288564, 'ENT'), (0.03428240741810037, 'Family Medicine'), (0.03359126982146076, 'Gastroenterology'), (0.034121621614070355, 'General Surgery'), (0.034562438532743045, 'Gynecology'), (0.033071393755738414, 'Neurology'), (0.03487847221937652, 'Obstetrics'), (0.03449397824274806, 'Oncology'), (0.032704678329786185, 'Ophthalmology'), (0.03385927287094733, 'Orthopedics'), (0.0346306471389483, 'Pediatrics'), (0.034209501546607395, 'Urology'), (0.03486286917748519, 'Vaccination'), (0.03481987842678791, ""Women's Health"")]","The average wait time from registration to consultation across hospitals varies by department for outpatient cases as follows:

- Cardiology: 0.0337 days
- Child Health: 0.0318 days
- Chronic Disease Management: 0.0351 days
- Dental: 0.0342 days
- Dermatology: 0.0332 days
- ENT: 0.0344 days
- Family Medicine: 0.0343 days
- Gastroenterology: 0.0336 days
- General Surgery: 0.0341 days
- Gynecology: 0.0346 days
- Neurology: 0.0331 days
- Obstetrics: 0.0349 days
- Oncology: 0.0345 days
- Ophthalmology: 0.0327 days
- Orthopedics: 0.0339 days
- Pediatrics: 0.0342 days
- Urology: 0.0346 days
- Vaccination: 0.0349 days
- Women's Health: 0.0348 days

The data is sourced from the `patient_wait_times` and `Outpatient_Cases` tables, using columns `registration_time`, `consultation_start_time`, and `patient_id`. The average wait time is calculated in days based on the difference between `consultation_start_time` and `registration_time`.",19.07,"Error: (sqlite3.OperationalError) no such column: case_type
[SQL:  SELECT      AVG(julianday(consultation_start_time) - julianday(registration_time)) AS avg_wait_time,     hospital_id FROM      patient_wait_times WHERE      case_type = 'Outpatient' GROUP BY      hospital_id;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)"
10,"Among patients over 60 years old who had surgeries,  which hospital and department combinations have the highest post-surgery readmission rates within 30 days? ",Error,Error,Error processing query,22.46,"Recursion limit of 10 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT
Traceback (most recent call last):
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\langgraph-aftershock-edrive-v2\evaluation\sql_evaluation\sql_agent_evaluator.py"", line 103, in run_evaluation
    result = sql_graph.invoke(formatted_input, config=config)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\5153-aftershock-v2\Lib\site-packages\langgraph\pregel\__init__.py"", line 2714, in invoke
    for chunk in self.stream(
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\5153-aftershock-v2\Lib\site-packages\langgraph\pregel\__init__.py"", line 2373, in stream
    raise GraphRecursionError(msg)
langgraph.errors.GraphRecursionError: Recursion limit of 10 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT
"
11,"What is the patient satisfaction score for each department or doctor, and how does it correlate with wait time or length of stay?",Error,Error,Error processing query,28.12,"Recursion limit of 10 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT
Traceback (most recent call last):
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\langgraph-aftershock-edrive-v2\evaluation\sql_evaluation\sql_agent_evaluator.py"", line 103, in run_evaluation
    result = sql_graph.invoke(formatted_input, config=config)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\5153-aftershock-v2\Lib\site-packages\langgraph\pregel\__init__.py"", line 2714, in invoke
    for chunk in self.stream(
  File ""E:\Codes (Windows) 2025\5153 langgraph E drive v2\5153-aftershock-v2\Lib\site-packages\langgraph\pregel\__init__.py"", line 2373, in stream
    raise GraphRecursionError(msg)
langgraph.errors.GraphRecursionError: Recursion limit of 10 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT
"
12,How long were patients hospitalised after surgery on average?, SELECT AVG(length_of_stay) AS average_length_of_stay FROM surgery_metrics;,"[(3.956,)]","The average length of stay after surgery is 3.956 days, based on the data from the `surgery_metrics` table, specifically using the `length_of_stay` column.",11.16,None
