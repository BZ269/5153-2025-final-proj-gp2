================================================================================
[EASY]
ðŸ”¸ GOLD SQL: SELECT COUNT(*) FROM patient_incidents;
ðŸ”¹ PRED SQL: SELECT COUNT(*) FROM patient_incidents;
âœ… Exact Match: True
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 1.00
  - select(no AGG)    : F1 = 1.00
  - where             : F1 = 1.00
  - where(no OP)      : F1 = 1.00
  - group(no Having)  : F1 = 1.00
  - group             : F1 = 1.00
  - order             : F1 = 1.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 1.00

================================================================================
[EASY]
ðŸ”¸ GOLD SQL: SELECT COUNT(*) FROM Inpatient_Cases WHERE treatment_plan IS NULL;
ðŸ”¹ PRED SQL: SELECT COUNT(*) FROM Inpatient_Cases WHERE treatment_plan IS NULL OR treatment_plan = 'None';
âœ… Exact Match: True
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 1.00
  - select(no AGG)    : F1 = 1.00
  - where             : F1 = 1.00
  - where(no OP)      : F1 = 1.00
  - group(no Having)  : F1 = 1.00
  - group             : F1 = 1.00
  - order             : F1 = 1.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 1.00

================================================================================
[MEDIUM]
ðŸ”¸ GOLD SQL: SELECT hospital_id, AVG(bill_amount) FROM outpatient_cases GROUP BY hospital_id;
ðŸ”¹ PRED SQL: SELECT      hospital_id,     AVG(bill_amount) FROM      Outpatient_Cases GROUP BY      hospital_id;
âœ… Exact Match: True
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 1.00
  - select(no AGG)    : F1 = 1.00
  - where             : F1 = 1.00
  - where(no OP)      : F1 = 1.00
  - group(no Having)  : F1 = 1.00
  - group             : F1 = 1.00
  - order             : F1 = 1.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 1.00

[parser patch] Skipping function expression starting with: round
[parser patch] Skipping function expression starting with: cast
================================================================================
[EASY]
ðŸ”¸ GOLD SQL: SELECT ROUND(COUNT(CASE WHEN outcomes = 'Successful' THEN 1 END) *100 / COUNT(*),2) FROM surgery_metrics;
ðŸ”¹ PRED SQL: SELECT      CAST(SUM(CASE WHEN outcomes = 'Successful' THEN 1 ELSE 0 END)(5,2)) / COUNT(*) * 100 FROM      surgery_metrics;
âœ… Exact Match: 0
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 0.00
  - select(no AGG)    : F1 = 0.00
  - where             : F1 = 1.00
  - where(no OP)      : F1 = 1.00
  - group(no Having)  : F1 = 1.00
  - group             : F1 = 1.00
  - order             : F1 = 1.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 1.00

[parser warning] Unknown table alias or column used as alias: pwt
[warn] Expected ')' but got: ( at idx 6, skipping
[parser warning] Unknown table alias or column used as alias: oc
[parser warning] Unknown table alias or column used as alias: pwt
[warn] Expected ')' but got: ( at idx 6, skipping
================================================================================
[EXTRA]
ðŸ”¸ GOLD SQL: SELECT hospital_id, AVG( JULIANDAY(pwt.consultation_end_time) - JULIANDAY(pwt.consultation_start_time) ) * 24 * 60 FROM patient_wait_times pwt GROUP BY hospital_id;
ðŸ”¹ PRED SQL: SELECT      oc.hospital_id,     AVG(julianday(consultation_end_time) - julianday(consultation_start_time)) * 24 * 60 FROM      Outpatient_Cases oc JOIN      patient_wait_times pwt ON oc.patient_id = pwt.patient_id GROUP BY      oc.hospital_id;
âœ… Exact Match: 0
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 0.00
  - select(no AGG)    : F1 = 0.00
  - where             : F1 = 1.00
  - where(no OP)      : F1 = 1.00
  - group(no Having)  : F1 = 1.00
  - group             : F1 = 1.00
  - order             : F1 = 1.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 1.00

[parser warning] Unknown table alias or column used as alias: inner
[parser warning] Unknown table alias or column used as alias: ic
[parser warning] Unknown table alias or column used as alias: sm
[parser warning] Unknown table alias or column used as alias: followup_ic
================================================================================
[HARD]
ðŸ”¸ GOLD SQL: SELECT COUNT(*) FROM inpatient_cases INNER JOIN surgery_metrics ON inpatient_cases.patient_id = surgery_metrics.patient_id WHERE inpatient_cases.follow_up_date IS NOT NULL;
ðŸ”¹ PRED SQL: SELECT COUNT(*) FROM Inpatient_Cases ic JOIN surgery_metrics sm ON ic.patient_id = sm.patient_id LEFT JOIN Inpatient_Cases followup_ic ON ic.patient_id = followup_ic.patient_id AND followup_ic.follow_up_date IS NOT NULL;
âœ… Exact Match: 0
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 1.00
  - select(no AGG)    : F1 = 1.00
  - where             : F1 = 0.00
  - where(no OP)      : F1 = 0.00
  - group(no Having)  : F1 = 1.00
  - group             : F1 = 1.00
  - order             : F1 = 1.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 0.00

[parser warning] Unknown table alias or column used as alias: pi
[parser warning] Unknown table alias or column used as alias: s
[parser patch] Skipping function-like token in column: count
[warn] Expected ')' but got: , at idx 14, skipping
[parser warning] Unknown table alias or column used as alias: ic
[parser warning] Unknown table alias or column used as alias: pi
[parser warning] Unknown table alias or column used as alias: sm
[warn] Expected ')' but got: when at idx 4, skipping
[parser patch] Skipping function expression starting with: when
================================================================================
[EXTRA]
ðŸ”¸ GOLD SQL: SELECT COUNT(DISTINCT s.patient_id) / NULLIF(COUNT(DISTINCT pi.patient_id), 0) * 100 FROM patient_incidents pi JOIN surgery_metrics s ON pi.patient_id = s.patient_id WHERE pi.age > 60;
ðŸ”¹ PRED SQL: SELECT COUNT(CASE WHEN pi.age > 60 THEN 1 ELSE NULL END) * 100.0 / COUNT(*) FROM Inpatient_Cases ic JOIN patient_incidents pi ON ic.patient_id = pi.patient_id LEFT JOIN surgery_metrics sm ON ic.patient_id = sm.patient_id WHERE pi.incident_type LIKE '%surgery%';
âœ… Exact Match: 0
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 0.00
  - select(no AGG)    : F1 = 0.00
  - where             : F1 = 0.00
  - where(no OP)      : F1 = 0.00
  - group(no Having)  : F1 = 1.00
  - group             : F1 = 1.00
  - order             : F1 = 1.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 0.00

[parser warning] Unknown table alias or column used as alias: sm
[parser warning] Unknown table alias or column used as alias: *
================================================================================
[EXTRA]
ðŸ”¸ GOLD SQL: SELECT sm.hospital, sm.department, AVG(sm.duration), AVG(sm.length_of_stay), COUNT(sm.surgery_id) FROM surgery_metrics sm GROUP BY sm.hospital, sm.department ORDER BY avg_surgery_duration_minutes DESC, avg_length_of_stay_days DESC;
ðŸ”¹ PRED SQL: SELECT * FROM * ; bt5153_gp
âœ… Exact Match: 0
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 0.00
  - select(no AGG)    : F1 = 0.00
  - where             : F1 = 1.00
  - where(no OP)      : F1 = 1.00
  - group(no Having)  : F1 = 0.00
  - group             : F1 = 0.00
  - order             : F1 = 0.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 0.00

[parser warning] Unknown table alias or column used as alias: ow
[parser warning] Unknown table alias or column used as alias: oc
[parser patch] Skipping function expression starting with: round
[parser warning] Unknown table alias or column used as alias: pwt
[parser warning] Unknown table alias or column used as alias: oc
[warn] Expected ')' but got: ( at idx 4, skipping
================================================================================
[EXTRA]
ðŸ”¸ GOLD SQL: SELECT ow.hospital_id, oc.department, ROUND(AVG((JULIANDAY(consultation_start_time) - JULIANDAY(registration_time)) * 24 * 60), 2), COUNT(ow.patient_id) FROM patient_wait_times ow JOIN Outpatient_Cases oc ON ow.patient_id = oc.patient_id GROUP BY ow.hospital_id, oc.department ORDER BY avg_wait_time_minutes DESC LIMIT 10;
ðŸ”¹ PRED SQL: SELECT      AVG(julianday(consultation_start_time) - julianday(registration_time)),     department FROM      patient_wait_times pwt JOIN      Outpatient_Cases oc ON pwt.patient_id = oc.patient_id GROUP BY      department;
âœ… Exact Match: 0
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 0.00
  - select(no AGG)    : F1 = 0.00
  - where             : F1 = 1.00
  - where(no OP)      : F1 = 1.00
  - group(no Having)  : F1 = 0.00
  - group             : F1 = 0.00
  - order             : F1 = 0.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 0.00

[parser warning] Unknown table alias or column used as alias: sm
[parser warning] Unknown table alias or column used as alias: pi
[parser patch] Skipping function expression starting with: sum
[parser warning] Unknown table alias or column used as alias: *
================================================================================
[EXTRA]
ðŸ”¸ GOLD SQL: SELECT  sm.hospital, sm.department, COUNT(sm.surgery_id), SUM(sm.readmission_within_30_days) FROM surgery_metrics sm JOIN patient_incidents pi ON sm.patient_id = pi.patient_id WHERE pi.age > 60 GROUP BY sm.hospital, sm.department ORDER BY SUM(sm.readmission_within_30_days) / COUNT(sm.surgery_id) DESC LIMIT 10;
ðŸ”¹ PRED SQL: SELECT * FROM * ; bt5153_gp
âœ… Exact Match: 0
ðŸ“Š Partial F1 Scores:
  - select            : F1 = 0.00
  - select(no AGG)    : F1 = 0.00
  - where             : F1 = 0.00
  - where(no OP)      : F1 = 0.00
  - group(no Having)  : F1 = 0.00
  - group             : F1 = 0.00
  - order             : F1 = 0.00
  - and/or            : F1 = 1.00
  - IUEN              : F1 = 1.00
  - keywords          : F1 = 0.00

                     easy                 medium               hard                 extra                all                 
count                3                    1                    1                    5                    10                  

====================== EXACT MATCHING ACCURACY =====================
exact match          0.667                1.000                0.000                0.000                0.300               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.667                1.000                1.000                0.000                0.400               
select(no AGG)       0.667                1.000                1.000                0.000                0.400               
where                1.000                0.000                0.000                0.000                0.500               
where(no OP)         1.000                0.000                0.000                0.000                0.500               
group(no Having)     0.000                1.000                0.000                0.500                0.667               
group                0.000                1.000                0.000                0.500                0.667               
order                0.000                0.000                0.000                0.000                0.000               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                1.000                0.000                0.333                0.600               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.667                1.000                1.000                0.000                0.400               
select(no AGG)       0.667                1.000                1.000                0.000                0.400               
where                1.000                0.000                0.000                0.000                0.250               
where(no OP)         1.000                0.000                0.000                0.000                0.250               
group(no Having)     0.000                1.000                0.000                0.250                0.400               
group                0.000                1.000                0.000                0.250                0.400               
order                0.000                0.000                0.000                0.000                0.000               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                1.000                0.000                0.200                0.375               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.667                1.000                1.000                1.000                0.400               
select(no AGG)       0.667                1.000                1.000                1.000                0.400               
where                1.000                1.000                1.000                1.000                0.333               
where(no OP)         1.000                1.000                1.000                1.000                0.333               
group(no Having)     1.000                1.000                1.000                0.333                0.500               
group                1.000                1.000                1.000                0.333                0.500               
order                1.000                1.000                1.000                1.000                1.000               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             1.000                1.000                1.000                0.250                0.462               
